#!/bin/bash
# location of moongen folder
MOONGEN_PATH="../MoonGen"
# location of moongen executable
MOONGEN=$MOONGEN_PATH/build/MoonGen
# Helper variable for date-string
DATE=$(date +%Y%m%d-%H%M)

# name of output folder, using date string
FOLDER_NAME="reports/testreport_$DATE"

# settings for test device
TESTER_INTERFACE_DPDK="07:00.1"



## DUT SETTINGS ##

# settings for device under test (DUT)

DUT_NAME="KERNEL"
DUT_OS="votp"

# general DUT config method (enabled, and manual or autmated via ssh)
CONFIG_DUT="y" 		# have the DUT configured automatically during test (requires meta-seapath-test-tools)
CONFIG_DUT_TYPE="ssh"   # type of DUT config can be via "ssh" or "manual"

if [[ $CONFIG_DUT_TYPE == "ssh" ]]; then
    # ssh config
    CONFIG_DUT_HOST="127.0.0.1" #"10.0.0.3"
    CONFIG_DUT_SSH_KEY_FILE="./key/ansible_public_ssh_key.priv"

    CONFIG_DUT_RUN=run_on_DUT_async #run_on_DUT_sync
    CONFIG_DUT_STOP=stop_all_on_DUT
else
    # manual config
    CONFIG_DUT_RUN=run_manual
    CONFIG_DUT_STOP=stop_manual
fi

CONFIG_DUT_TECHNOLOGY="kernel" # kernel or dpdk(not yet implemented)

if [[ $CONFIG_DUT_TECHNOLOGY == "kernel" ]]; then
    CONFIG_DUT_INTERFACE_KERN="enp7s0f0"  #"enp0s31f6" 	# kernel (ifconfig / ip address show) interface name

    # DUT setup scripts reside in config_scripts subdirectory
    CONFIG_DUT_PKT_MIRROR="bare-kern-pkt-mirror.sh"
    CONFIG_DUT_PKT_MIRROR_ARGS=$CONFIG_DUT_INTERFACE_KERN
    CONFIG_DUT_92PUBLISHER="bare-kern-publisher.sh"
    CONFIG_DUT_92PUBLISHER_ARGS=$CONFIG_DUT_INTERFACE_KERN
    CONFIG_DUT_IEC61850_SERVER="bare-kern-iec61850-open-server.sh"
    CONFIG_DUT_IEC61850_SERVER_ARGS=$CONFIG_DUT_INTERFACE_KERN
fi

# TODO
if [[ $CONFIG_DUT_TECHNOLOGY == "dpdk" ]]; then
    CONFIG_DUT_INTERFACE_DPDK="00:1f.6"   	# dpdk (pci address) interface name

    # DUT setup scripts reside in config_scripts subdirectory
    CONFIG_DUT_PKT_MIRROR="bare-dpdk-pkt-mirror.sh"
    CONFIG_DUT_PKT_MIRROR_ARGS=$CONFIG_DUT_INTERFACE_DPDK
    CONFIG_DUT_92PUBLISHER="bare-dpdk-publisher.sh"
    CONFIG_DUT_92PUBLISHER_ARGS=$CONFIG_DUT_INTERFACE_DPDK
    CONFIG_DUT_IEC61850_SERVER="bare-dpdk-iec61850-open-server.sh"
    CONFIG_DUT_IEC61850_SERVER_ARGS=$CONFIG_DUT_INTERFACE_DPDK
fi


## BENCHMARK SETTINGS ##

FRAME_SIZES="128,256,512"  #"64,128,256,512,1024,1280,1518"

# settings regarding the type of rate limiting used. Hardware (hw) Constand Bit Rate (cbr), or more bursty (poison)
# cbr is most supported but less accurate. poison is most accurate, hardware is most reliable
# NOTE: use of hardware rate limiting instead of software is only supported by 10GBe controllers such as X540
# the I210 and I350 do not support hardware rate limiting
# posion will send invalid packets on the line, assuming the DUT will ignore them. Please ensure this is the case
# when using this form of rate limiting
USE_RATE_TYPE="cbr"  #options: hw cbr poison

TXPORT=0 					# DPDK Device on tester to transmit to
RXPORT=0 					# DPDK Device on tester to receive from (set to the same device for using 1 NIC)

# Testing that should be inlcuded in this test run

# measure maximum troughput
#TEST_THROUGHPUT="y"
TEST_THROUGHPUT_DURATION=1 	 		# <single test duration>
TEST_THROUGHPUT_NUM_ITERATIONS=1 		# <amount of test iterations>
TEST_THROUGHPUT_RTHS=100   			# <throughput rate threshold>
TEST_THROUGHPUT_MLR=0.1    			# <max throuput loss rate>
TEST_THROUGHPUT_MAXQUEUES=1			# maximum load queues(threads) cannot be higher then cores-1
TEST_THROUGHPUT_RESETTIME=100			# time after a test iteration in milliseconds
TEST_THROUGHPUT_SETTLETIME=0.1			# time before a test starts to warm up card in seconds

# measure link latency at line rate
#TEST_LATENCY="y"
TEST_LATENCY_DURATION=1 			# <single test duration>
TEST_LATENCY_RT=1000   				# <throughput rate> if no rate set for a frame size in rates.txt (generated by troughput.lua)
#TEST_LATENCY_RT_OVERRIDE="-o"			# do not use rates.txt (generated by troughput.lua) but always use TEST_LATENCY_RT
TEST_LATENCY_MAXQUEUES=1			# maximum load queues(threads) cannot be higher then cores-1, 0 means no load
TEST_LATENCY_RATELIMIT=0.001			# rate at which a latency measurement is performed (this sends a special ptp packet)
TEST_LATENCY_SETTLETIME=0.1			# time before a test starts to warm up card in seconds

# measure frame-loss for each link speed
#TEST_FRAMELOSS="y"
TEST_FRAMELOSS_DURATION=1 			# <single test duration>
TEST_FRAMELOSS_GRANULARITY=0.1 			# <1/x steps in test (range: 0-1; where 1 means only 1 step, and 0.1 means 10 steps)>
TEST_FRAMELOSS_MAXQUEUES=1			# maximum load queues(threads) cannot be higher then cores-1
TEST_FRAMELOSS_SETTLETIME=0.1			# time before a test starts to warm up card in seconds

# measure maximum burst length
#TEST_BACKTOBACK="y"
TEST_BACKTOBACK_DURATION=1 			# <single test duration>
TEST_BACKTOBACK_NUM_ITERATIONS=1 		# <amount of test iterations>
TEST_BACKTOBACK_BTHS=5 				# <back-to-back frame threshold>

# measure link inter-arrival-time at line rate or no load
TEST_INTER_ARRIVAL_TIME="y"
TEST_INTER_ARRIVAL_TIME_DURATION=5 		# <single test duration>
TEST_INTER_ARRIVAL_TIME_RT=0	   		# <throughput rate> if no rate set for a frame size in rates.txt (generated by troughput.lua)
TEST_INTER_ARRIVAL_TIME_OVERRIDE="-o"		# do not use rates.txt (generated by troughput.lua) but always use TEST_LATENCY_RT
TEST_INTER_ARRIVAL_TIME_MAXQUEUES=1		# maximum load queues(threads) cannot be higher then cores-1, 0 means no load
TEST_INTER_ARRIVAL_TIME_SETTLETIME=0.1		# time before a test starts to warm up card in seconds

#TEST_IEC61850="y"
TEST_IEC61850_DURATION=2 			# <single test duration>
TEST_IEC61850_SAMPLES_SEC=4000			# <how many sampled values per second to send>
TEST_IEC61850_MEASUREMENTS=5 			# <how many measurements should be taken>
TEST_IEC61850_TYPE="hw" 			# <type of timestamper(hw|sw)> hw needs i350 or similar NIC that supports HW timestamping of all packets
TEST_IEC61850_STREAMS=1 			# amount of streams to send simultaniously
TEST_IEC61850_STREAM_TRIGGER_INDEX=1 		# index of stream that will generate the trigger

# set to generate report
#GENERATE_REPORT="y"
GENERATE_REPORT_TYPE="pdf" # can be pdf or html

# Final setting to indicate all variables have been loaded
TESTBENCH_CONFIGURED="y"
